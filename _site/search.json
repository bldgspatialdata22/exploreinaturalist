[
  {
    "objectID": "04_final-project_proposal_research.html",
    "href": "04_final-project_proposal_research.html",
    "title": "Final Project",
    "section": "",
    "text": "The final project is an opportunity for you to practice the spatial data skills we’ve been working on in this course while also exploring your interests and the potential for spatial data to support civic goals.\nThis project has three parts:\n\nA project proposal (due November 9)\nAn in-class presentation about your project (due December 7)\nA project repository including code, data, output files, and a README (due December 16)\n\n\n\nIn framing your project, look for opportunities to apply one or more of the six models of local practice described in @loukissas2019:\n\nLook at the data setting, not just the data set\n\n“Place is something less easily defined: contingent on experience, defined by meaning, susceptible to changing social designations,” (p. 20 Loukissas)\niNaturalist as a research and community platform – a cyperspace\nAllows citizen engagement in grassroots scientific research\n\nHow is iNaturalist an ideal platform for citizen science? Or is it? Can if be improved?\nDoes iNaturalist meet the goal of obtaining meaningful and useful data that advances scientific research and can be applied to real world problems?\nIs iNatualist data easily accessible for research purposes?\n\nrinat: Access iNaturalist data with R\n\nDoes iNaturalist promote\n\n\nMake place part of data presentation\n\nCan amateur bioblitz/biodiversity observations hold enough merit to be included in data sets for professional or academic research?\n\noffers research grade status\nWho qualifies the data as research grade?\nHow are identifications confirmed?\n\n\nTake a comparative approach to data analysis\n\nHow does citizen science data compare to professional inventory data in the same or similar areas?\n\nCreate counterdata to challenge normative algorithms\n\niNaturalist data should be considered the counterdata to data collected by government, academic, and industry institutions.\n\nCreate interfaces that cause friction\n\nOffers map interface to view all observations, filter observations by various attributes (ei. biota, location, temporal, author), calculates general statistics of Project’s observation data.\nWhere could further improvements be made to the interface?\n\nUse data to build relationships\n\nIs your project designed around what Loukissas calls the common “ambitions” for working data—orientation, access, analysis, andoroptimization? Or, are you trying to promote critical reflection on the local conditions of data using strategies such as place making, restraint, reflexivity, or contestation?\nYour goals may change between your initial proposal and the completion of your project but your final presentation should include both an explanation of your goals and how your goals do or do not engage with critical approaches to spatial data.\n\n\n\n\nUse one or more existing spatial datasets\n\nOK – I can access spatial datasets from iNaturalist using rinat :: get_inat_obs_projct(). However, for projects with more observations I cannot subset data using this function, so it will take a long time to retrieve the full dataset (ei. MD_masternat_piedmont only has 3934 observations, whereas the MD_biodiversity contains over 1 million observations and can only return 10,000 observations due to the limits of iNaturalist’s current API.\n\nActually, only returned 9999 observations and displayed this note:\n\nNote: mismatch between number of observations reported and returned by the API.\n\n\n\n\nIf you are creating or collecting data, your scope for other aspects of the project may need to be more limited in order to allow adequate time to design your data collection tools.\n\n\n\nYou are welcome to explore a wide range of possible formats for your final project:\n\nAn interactive web map that enables users to explore how local conditions may vary over time or place\nA short exploratory data analysis using tables, plots, and maps to illustrate what a data set can (or can’t) tell us about a place\nAn R package for publishing and documenting a spatial data set (and how the data was created)\nA PDF fact sheet using spatial data to summarize the local impact of a national challenge and what local organizations are working to address the issue\nOr something else entirely.\n\nThink about the public you may want to engage with your project."
  },
  {
    "objectID": "04_final-project_proposal_research.html#project-proposal",
    "href": "04_final-project_proposal_research.html#project-proposal",
    "title": "Final Project",
    "section": "Project proposal",
    "text": "Project proposal\nYour project proposal needs to answer three main questions:\n\nWhat are your goals for the project? Your goals could include answering a research question, making the case for a public policy change, or building an interface to help people better understand an issue in their community. Your goals could also include developing your own ability to analyze a specific type of data or exploring an academic interest. Reflect on who might benefit from your proposed project and how your project can avoid causing people harm.\nWhat data can you use to support your goal? Your data could include any public spatial data or data that has a spatial attribute. You can even create data from scratch or collect your own data. Reflect on the “setting” for the data, whose local knowledge it represents, and what communities participate in collecting or maintaining the data.\nWhat is your approach to using data to support your goal? Your approach could include mapping, exploratory analysis, documentation, visualization, or a combination of multiple tools and methods. You don’t need to reinvent the wheel. You can adapt an existing approach or propose a few options you hope to try. Reflect on any expected challenges and if your proposed approach is feasible in the time you have available during the semester.\n\n\n\n\n\n\n\nI will schedule short one-on-one meetings in advance of the due date for the final project proposal to help you in refining your ideas, identifying possible data sources, and any existing R packages or frameworks you can adapt or use for your project.\n\n\n\nThere are few more requirements to keep in mind:\n\nAnswer each question with a brief but considered response. If it helps to have a total word count to work towards, try to answer all three questions in something between 500 and 1000 words.\nFormat your proposal as an RMarkdown or Quarto document. Your document should include links to any published data or related resources and reproducible code for any preliminary data analysis you completed to support your proposal.\nCite your sources! While an extensive literature review is unnecessary, reviewing how other researching and practitioners have used the same or similar spatial data may give you ideas for your own project. Citing sources in RStudio is a little different than Microsoft Word so I strongly recommend using the Zotero citation manager in combination with the Better Bibtex extension. If a single R package is a big part of your proposed approach, make sure to also include a citation for the package. Read How to Cite R and R Packages by Steffi LaZerte for more background on how and why you should cite R packages.\n\n\n\n\n\n\n\nYou are strongly encouraged to use R as part of your project but it isn’t required. If you prefer to use QGIS or another tool as the main part of your approach, you are still expected to use Markdown or RMarkdown to share your proposal and your proposal should make the case for your preferred approach.\n\n\n\nIf you have already identified a data source for your project, make sure:\n\nyou know the data and goals are related (e.g. you have a question that can be answered using the data),\nyou have permission to use the data (e.g. the data is published under an open license),\nyou know the data is in an accessible format (e.g. CSV, ArcGIS Feature Server, GeoPackage file),\nand you know there are no major data quality issues (e.g. location accuracy, completeness) that you can’t address.\n\nIf you are creating data by based on existing unstructured sources (e.g. digitizing features from a georeferenced historic map) or collecting data based on phenomena or features in your community (e.g. using a smartphone app to document noise levels), make sure:\n\nyou have a clear reason for creating or collecting data instead of using an existing source,\nyou identify what resources you need to complete your project including the time to collect the data,\nand you know your proposal is not subject to review by the UMBC Institutional Review board (review What is NOT Human Subjects Research? for more information)."
  },
  {
    "objectID": "04_final-project_proposal_research.html#project-presentation",
    "href": "04_final-project_proposal_research.html#project-presentation",
    "title": "Final Project",
    "section": "Project presentation",
    "text": "Project presentation\nYour in-class presentation should be around ten minutes and address these key questions:\n\nWhat were your initial goals for the project? How did they change or develop as you worked on your project?\nWhat data sources did you use? How, why, and where were they created?\nWhat packages, templates, or other resources did you use in creating your final project?\nWhat challenges did you encounter in making use of these resources and this data?\nWhat do you think your project does well?\n\n\n\n\n\n\n\nConsider using Quarto to create an HTML presentation using reveal.js. Taking this approach could allow you to easily incorprorate data visualizations or other materials from your project into your presentation."
  },
  {
    "objectID": "04_final-project_proposal_research.html#final-project-repository",
    "href": "04_final-project_proposal_research.html#final-project-repository",
    "title": "Final Project",
    "section": "Final project repository",
    "text": "Final project repository\nYour final project should be submitted as a GitHub repository. A private repository can be provided to you as part of the course organization or you can set up your own repository on your personal GitHub account.\nThe repository must include:\n\nproject data: including the source files or, if files exceed the 50MB maximum size allowed on GitHub, a script used for importing and processing the data before visualization or analysis\nproject code: including any R scripts, RMarkdown, or Quarto files used to read, tidy, transform, analyze, visualize or map the selected data.\noutput files: including any processed data files or rendered PDF or HTML documents.\nREADME: a public-facing summary of the project explaining your process for processing the data and any relevant information another person may need to work with the data or your code.\nadditional materials: including any data collection materials (e.g. survey forms), reference data used by the project code, or other related materials."
  },
  {
    "objectID": "Accessing_Data.html",
    "href": "Accessing_Data.html",
    "title": "Accessing Data",
    "section": "",
    "text": "Install required packages and libraries for accessing data.\n\n# remotes::install_github(\"ropensci/rinat\")\n# remotes::install_github(\"ropensci/rgbif\")\nlibrary(tidyverse)\n#> Warning: package 'tidyverse' was built under R version 4.1.3\n#> -- Attaching packages --------------------------------------- tidyverse 1.3.2 --\n#> v ggplot2 3.4.0      v purrr   0.3.5 \n#> v tibble  3.1.8      v dplyr   1.0.10\n#> v tidyr   1.2.1      v stringr 1.4.1 \n#> v readr   2.1.3      v forcats 0.5.2\n#> Warning: package 'ggplot2' was built under R version 4.1.3\n#> Warning: package 'tibble' was built under R version 4.1.3\n#> Warning: package 'tidyr' was built under R version 4.1.3\n#> Warning: package 'readr' was built under R version 4.1.3\n#> Warning: package 'purrr' was built under R version 4.1.3\n#> Warning: package 'dplyr' was built under R version 4.1.3\n#> Warning: package 'stringr' was built under R version 4.1.3\n#> Warning: package 'forcats' was built under R version 4.1.3\n#> -- Conflicts ------------------------------------------ tidyverse_conflicts() --\n#> x dplyr::filter() masks stats::filter()\n#> x dplyr::lag()    masks stats::lag()\nlibrary(rinat) # R package to retreive data from iNaturalist database\nlibrary(rgbif) # R package to retreive data from GBIF database\nlibrary(readr) # R package for reading and writing files locally\nlibrary(spData) # R package for importing US states data\n#> Warning: package 'spData' was built under R version 4.1.3\n#> To access larger datasets in this package, install the spDataLarge\n#> package with: `install.packages('spDataLarge',\n#> repos='https://nowosad.github.io/drat/', type='source')`\n\n\n\nAfter testing out certain functions from the rinat package, I decided to use get_inat_obs_project() to retrieve data through the iNaturalist API. I chose three citizen science projects within the state of Maryland. iNaturalist allows project administrators to control the level of detail users are required to report in order for an observation to be included in the project dataset. Project admins are also able to privatize their project’s data. These three projects varying levels of observation detail, however data are accessible to any public user.\n\n# Access selected iNaturalist projects' observations using rinat::get_inat_obs_project()\n# Assign data unique name\npiedmont_obs <- rinat::get_inat_obs_project(\"maryland-master-naturalist-program-piedmont-region\", type = \"observations\")\n# Save data to local folder\nreadr::write_rds(piedmont_obs, here::here(\"data/piedmont_obs.rds\"))\n# Repeat for coastal project\ncoastal_obs <- rinat::get_inat_obs_project(\"maryland-master-naturalist-program-coastal-plain\", type = \"observations\")\nreadr::write_rds(coastal_obs, here::here(\"data/coastal_obs.rds\"))\n# Repeat for biodiversity data\nbiodiv_obs <- rinat::get_inat_obs_project(\"biodiversity-of-maryland\", type = \"observations\")\nreadr::write_rds(biodiv_obs, here::here(\"data/biodiv_obs.rds\"))\n\n\n\n\nI also wanted to test out the Global Biodiversity Information Facility’s R package rgbif. This organization offers users free, public access to data from a number of sources around the world, including iNaturalist. Their online occurrences search engine allows for fine-tuned filtering of their entire collection.\nAfter using the online search tool, I repeated my exact search using rgbif’s occ_search() . Although this function is straight-forward, it does require knowledge of the GBIF API’s standards for each attribute. For instance, the country attribute will only work using the country’s 2-letter country code. Note, this is not true of the online occurrence search tool. rgbif does have a built-in function to cross reference: rgb_country_codes() .\nAnother tricky part of using occ_search() is searching by datasetKey , which is the unique ID associated with a dataset. There are other attributes you can search by in order to narrow down your search to only include a specific instiution’s data, such as publishingOrg or institutionCode .\nAlthough GBIF’s online search tool is more extensive and user-friendly than iNaturalist’s observation search tool, and I prefer using the GBIF hub in order to retrieve full datasets, it definitely requires familiarizing yourself with each search parameter.\n\n# Access iNaturalist data from GBIF using rgbif::occ_search()\n#\n# Recreate data occurance search done on website with the following filters:\n#\n# country or area = United States of America\n# dataset = iNaturalist Research-grade Observations (50c9509d-22c7-4a22-a47d-8c48425ef4a7)\n# has coordinate = true\n# has geospatial issue = false\n# occurance statis = present\n# state province = Maryland\n#\n# Confirm 2-letter country code for United States\nrgbif::rgb_country_codes(country_name = \"United\", fuzzy = FALSE)\n\nGBIF_MD_research_grade <-\n  rgbif::occ_search(\n    taxonKey = NULL,\n    scientificName = NULL,\n    country = \"US\",\n    datasetKey = \"50c9509d-22c7-4a22-a47d-8c48425ef4a7\",\n    hasCoordinate = TRUE,\n    hasGeospatialIssue = FALSE,\n    occurrenceStatus = \"present\",\n    stateProvince = \"Maryland\"\n  )\n# Save data from search locally\nreadr::write_rds(GBIF_MD_research_grade, here::here(\"data/GBIF_MD_research_grade.rds\"))\n# Another example using occ_search\n# This search includes the \"year\" parameter, where year is set to \"2022\"\nGBIF_MD_research_grade_2022 <-\n  rgbif::occ_search(\n    taxonKey = NULL,\n    scientificName = NULL,\n    country = \"US\",\n    datasetKey = \"50c9509d-22c7-4a22-a47d-8c48425ef4a7\",\n    hasCoordinate = TRUE,\n    hasGeospatialIssue = FALSE,\n    occurrenceStatus = \"present\",\n    stateProvince = \"Maryland\",\n    year = \"2022\"\n  )\n\n\n\n\nAn alternative to using occ_search() or another rgbif function in order to pull data into R directly from GBIF is to request a download after performing an occurrence search on the website. This also allows you to get around the 10,000 occurrence download limitation of the GBIF Occurrence API. You’ll have to wait for GBIF to fulfill your download request, and the request will take longer for larger datasets, however the turnaround is usually 24 hours or less and your download is retrievable for six-months.\n\n# Data can also be accessed from GBIF via downloading tsv files.\n# The former method offers a glimpse at the dataset\n# whereas downloading the csv provides the dataset in its entireity.\n# NOTE: All GBIF data is in simple tab-separated values(TSV) format\n#\n# Read in GBIF data from csv using read_tsv()\nGBIF_MD_research_grade_FULL <-\n  readr::read_tsv(\"data/GBIF_MD_research_grade.csv\")"
  },
  {
    "objectID": "Data_Cleaning.html",
    "href": "Data_Cleaning.html",
    "title": "Data Cleaning",
    "section": "",
    "text": "Install required packages and libraries for cleaning data.\n\n# install.packages(\"tidyverse\")\nlibrary(readr) # R package for reading and writing files locally\nlibrary(dplyr) # R package for data manipulation\nlibrary(sf) # R package for handling simple feature spatial data\nlibrary(tidyr) # R package for creating tidy data\nlibrary(janitor) # R package with tools for examining and cleaning data\n\n# Read data saved to data folder\npiedmont_obs <- readr::read_rds(here::here(\"data/piedmont_obs.rds\"))\ncoastal_obs <- readr::read_rds(here::here(\"data/coastal_obs.rds\"))\nbiodiv_obs <- readr::read_rds(here::here(\"data/biodiv_obs.rds\"))\nmaryland_data <- readr::read_rds(here::here(\"data/maryland_data.rds\"))\nGBIF_MD_research_grade_FULL <- readr::read_tsv(\"data/GBIF_MD_research_grade.csv\")\n\n\n\n\n\n\nWhat is the the data structure of each dataset?\nWhat are the column names/variables, and are they consistent between each dataset?\nWhich variables are important to keep for an exploratory analysis, and are they in useful data formats?\n\n\n# Check out data\n# What is the data structure of each dataset?\n# Are they tibbles, data.frames, spatial data.frames?\n# If spatial, how are coordinates stored?\n#\n# MARYLAND MASTER NATURALIST COASTAL REGION PROJECT\nhead(coastal_obs)\n# returns first 6 rows of dataframe\nsummary(coastal_obs)\nsf::st_crs(coastal_obs)\n# crs = NA\n# What are the column names?\ncolnames(coastal_obs)\n# MARYLAND MASTER NATURALIST PIEDMONT REGION PROJECT\nhead(piedmont_obs)\nsummary(piedmont_obs)\nsf::st_crs(piedmont_obs)\n# crs = NA\n#\n# MARYLAND BIODIVERSITY PROJECT\nhead(biodiv_obs)\nsummary(biodiv_obs)\nsf::st_crs(biodiv_obs)\n# crs = NA\n#\n# GBIF RESEARCH-GRADE, MARYLAND iNATURALIST OBSERVATIONS\nhead(GBIF_MD_research_grade_FULL)\n# It is a tibble dataframe\nsummary(GBIF_MD_research_grade_FULL)\nsf::st_crs((GBIF_MD_research_grade_FULL))\n# crs = NA\n\nThe janitor function compare_df_cols_same() when bind_method = \"rbind\" returns a data frame where column names and data types are more easily comparible.\nGBIF stores iNaturalist attribute data very differently than iNaturalist does. Some of the data transformations performed by GBIF include:, converting strings of numbers into type numeric data, creating new attributes from complex taxonomic classifications that are stored in iNaturalist as single attributes, and removing data deemed unnecessary from a biological research perspective (e.i. user information).\n\njanitor::compare_df_cols_same(coastal_obs, piedmont_obs, biodiv_obs, GBIF_MD_research_grade_FULL, bind_method = \"rbind\")\n# Which variables are important to keep for further analysis?\n\n\n\n\n\nUpon investigating each project, one thing to note is that the geolocation of each observation is stored at lat/lon coordinates in two separate attribute columns with respective names. These coordinates are also stored as character data, which is not compatible with sf logic. In order create plots and maps of these data, first the coordinate data need to be converted to type numeric, then transformed into a simple feature where the geometry is set to the lat/lon data.\nIn addition, any observations where users did not report their geolocation are not mappable, and therefore should be removed from the dataset. These observations can be found by calling the logical operator which() with is.na() on the coordinate columns.\n\n# Prep coastal_obs data\n# Convert lat/lon columns to numeric type\ncoastal_obs$latitude <- as.numeric(as.character(coastal_obs$latitude))\ncoastal_obs$longitude <- as.numeric(as.character(coastal_obs$longitude))\n# Check for NAs in lat/lon columns\ncostal_na_lat <- which(is.na(coastal_obs$latitude))\ncoastal_na_lon <- which(is.na(coastal_obs$longitude))\n# Both columns return NA values in rows: 1341, 1342, 1344, 1382\n# Remove rows in dateframe with NA values\ncoastal_obs_drop_na <- coastal_obs %>%\n  tidyr::drop_na(latitude)\n# Convert iNaturalist dataframes into sf objects\ncoastal_obs_sf <- sf::st_as_sf(coastal_obs_drop_na, coords = c(\"longitude\", \"latitude\"), crs = 4269)\n\ncoastal_3857 <-\n  sf::st_transform(coastal_obs_sf, crs = 3857)\n\n\npiedmont_obs$latitude <- as.numeric(as.character(piedmont_obs$latitude))\npiedmont_obs$longitude <- as.numeric(as.character(piedmont_obs$longitude))\n# Check for NAs in lat/lon columns\npiedmont_na_lat <- which(is.na(piedmont_obs$latitude))\npiedmont_na_lon <- which(is.na(piedmont_obs$longitude))\n# Both columns return NA values in 100 rows\n# Remove rows in dateframe with NA values\npiedmont_obs_drop_na <- piedmont_obs %>%\n  tidyr::drop_na(latitude)\n# Convert iNaturalist dataframes into sf objects\npiedmont_obs_sf <- sf::st_as_sf(piedmont_obs_drop_na, coords = c(\"longitude\", \"latitude\"), crs = 4269)\n\npiedmont_3857 <-\n  sf::st_transform(piedmont_obs_sf, crs = 3857)\n\nst_crs(piedmont_3857)\n\n\n# Repeat aboce steps for biodiv_obs data\n# Convert lat/lon columns to numeric type\nbiodiv_obs$latitude <- as.numeric(as.character(biodiv_obs$latitude))\nbiodiv_obs$longitude <- as.numeric(as.character(biodiv_obs$longitude))\n# Check for NAs in lat/lon columns\nbiodiversity_na_lat <- which(is.na(biodiv_obs$latitude))\nbiodiversity_na_lon <- which(is.na(biodiv_obs$longitude))\n# Both columns return NA values\n# Remove rows in dateframe with NA values\nbiodiv_obs_drop_na <- biodiv_obs %>%\n  tidyr::drop_na(latitude)\n# Convert iNaturalist dataframes into sf objects\nbiodiv_obs_sf <- sf::st_as_sf(biodiv_obs_drop_na, coords = c(\"longitude\", \"latitude\"), crs = 4269)\n\nbiodiv_3857 <- sf::st_transform(biodiv_obs_sf, crs = 3857)\n\nst_crs(biodiv_3857)\n\n\n\n\nAfter exploring each dataset I have decided to reduce the data frames down to 10 columns:\n\n“user.login” or “recordedBy” = iNaturalist username\n“id” or “gbifID” = unique id number assigned to observation\n“observed_on” or “eventDate” = date of observation reported by user\n\nnote: “observed_on” format (YYYY-MM-DD); “eventDate” format (YYYY-MM-DDT “HH:MM:SS”)\n\n“taxon.id” or “speciesKey” = unique id number assigned to a species\n“taxon.name” or “species” = scientific name (genus + epithet) of species\n“iconic_taxon.name” or “kingdom” = name of higher classification of species observed\n“latitude” or “decimalLatitude”\n“longitude” or “decimalLongitude”\n\nAdditional columns were kept for GBIF occurrence data, which does not exist in datasets obtained directly through the iNaturalist API.\n\n# Create new dataframe, filtering out unecessary variables\n# Keep variables that will be useful in further analysis\n# Coastal\ncoastal_sm <-\n  coastal_3857 %>%\n  dplyr::select(all_of(c(\n    \"id\",\n    \"observed_on\",\n    \"taxon_id\",\n    \"taxon.name\",\n    \"user.login\",\n    \"observation_photos_count\",\n    \"place_guess\",\n    \"quality_grade\",\n    \"captive\"\n  )))\n\n# Filter dataframe down to research quality observations\ncoastal_researchgrade <-\n  dplyr::filter(\n    coastal_sm, quality_grade == \"research\",\n    captive == \"FALSE\"\n  )\n\nreadr::write_rds(coastal_researchgrade, here::here(\"data/coastal_researchgrade.rds\"))\n\n# Piedmont\npiedmont_sm <-\n  piedmont_3857 %>%\n  dplyr::select(all_of(c(\n    \"id\",\n    \"observed_on\",\n    \"taxon_id\",\n    \"taxon.name\",\n    \"user.login\",\n    \"observation_photos_count\",\n    \"place_guess\",\n    \"quality_grade\",\n    \"captive\"\n  )))\n\n# Filter dataframe down to research quality observations\npiedmont_researchgrade <-\n  dplyr::filter(\n    piedmont_sm, quality_grade == \"research\",\n    captive == \"FALSE\"\n  )\n\nreadr::write_rds(piedmont_researchgrade, here::here(\"data/piedmont_researchgrade.rds\"))\n\n# Biodiversity data\nbiodiv_sm <-\n  biodiv_3857 %>%\n  dplyr::select(all_of(c(\n    \"id\",\n    \"observed_on\",\n    \"taxon_id\",\n    \"taxon.name\",\n    \"user.login\",\n    \"observation_photos_count\",\n    \"place_guess\",\n    \"quality_grade\",\n    \"captive\"\n  )))\n\n# Filter dataframe down to research quality observations\nbiodiv_researchgrade <-\n  dplyr::filter(\n    biodiv_sm, quality_grade == \"research\",\n    captive == \"FALSE\"\n  )\n\nreadr::write_rds(biodiv_researchgrade, here::here(\"data/biodiv_researchgrade.rds\"))\n\nGBIF Data\n\nGBIF_sf <- sf::st_as_sf(GBIF_MD_research_grade_FULL, coords = c(\"decimalLongitude\", \"decimalLatitude\"), crs = 4269)\n\nGBIF_3857 <-\n  sf::st_transform(GBIF_sf, crs = 3857)\n\nsf::st_crs(GBIF_3857)\n\nGBIF_sm <-\n  GBIF_3857 %>%\n  select(all_of(c(\n    \"gbifID\",\n    \"kingdom\",\n    \"class\",\n    \"family\",\n    \"genus\",\n    \"species\",\n    \"eventDate\",\n    \"recordedBy\",\n    \"speciesKey\"\n  )))\n\n\n\nreadr::write_rds(GBIF_sm, here::here(\"data/GBIF_sm.rds\"))\n\n\nGBIF_kingdoms <-\n  GBIF_sm %>%\n  dplyr::select(all_of(c(\n    \"gbifID\",\n    \"kingdom\"\n  )))\n\nreadr::write_rds(GBIF_kingdoms, here::here(\"data/GBIF_kingdoms.rds\"))"
  },
  {
    "objectID": "Data_Exploration.html",
    "href": "Data_Exploration.html",
    "title": "Data Exploration",
    "section": "",
    "text": "Introduction to the exploration:\nData from iNaturalist projects were retrieved using r package “rinat” directly from the iNaturalist.\niNaturalist data was also retrieved via the Global Biodiversity Information Facility.\niNaturalist has multiple projects that vary by geography:\n\n# Coastal\ncoastal_research_map <- ggplot() +\n  # Use layer_static_mapbox() to set up base map\n  mapboxapi::layer_static_mapbox(\n    # Make sure to set location to the proper data\n    location = coastal_researchgrade,\n    style_url = \"mapbox://styles/mapbox/light-v10\"\n  ) +\n  # Set object aesthetics\n  ggplot2::geom_sf(\n    mapping = aes(),\n    color = \"red\",\n    size = 2,\n    alpha = 0.3,\n    shape = 4,\n    data = coastal_researchgrade\n  ) +\n  # Add appropriate title and caption\n  labs(\n    title = \"Maryland Coastal Research Grade Observations\",\n    caption = \"Data courtesy of iNaturalist: Master Naturalist Program - Coastal Plain \\n project_id = 474\"\n  )\n# View map and adjust aesthetics\ncoastal_research_map\n\n\n\n# Save map as .png file for referencing\nggplot2::ggsave(\"coastal_research_map.png\", plot = coastal_research_map, path = \"deliverables\")\n#> Saving 7 x 5 in image\n\n# Piedmont\npiedmont_research_map <- ggplot() +\n  mapboxapi::layer_static_mapbox(\n    location = piedmont_researchgrade,\n    style_url = \"mapbox://styles/mapbox/light-v10\"\n  ) +\n  ggplot2::geom_sf(\n    mapping = aes(),\n    color = \"blue\",\n    size = 2,\n    alpha = 0.3,\n    shape = 4,\n    data = piedmont_researchgrade\n  ) +\n  labs(\n    title = \"Maryland Piedmont Research Grade Observations\",\n    caption = \"Data courtesy of iNaturalist: Master Naturalist Program - Piedmont Region \\n project_id = 1396\"\n  )\n\npiedmont_research_map\n\n\n\nggplot2::ggsave(\"piedmont_research_map.png\", plot = piedmont_research_map, path = \"deliverables\")\n#> Saving 7 x 5 in image\n\n# State biodiversity data\nbiodiv_researchgrade_map <- ggplot() +\n  mapboxapi::layer_static_mapbox(\n    location = biodiv_researchgrade,\n    style_url = \"mapbox://styles/mapbox/light-v10\"\n  ) +\n  ggplot2::geom_sf(\n    mapping = aes(),\n    size = 2,\n    alpha = 0.3,\n    shape = 4,\n    data = biodiv_researchgrade\n  ) +\n  labs(\n    title = \"Maryland Biodiversity Research Grade Observations\",\n    caption = \"Data courtesy of iNaturalist: Maryland Biodiversity Project \\n project_id = 17241\"\n  ) +\n  ggplot2::theme_classic()\n\nbiodiv_researchgrade_map\n\n\n\nggplot2::ggsave(\"biodiv_research_map.png\", plot = biodiv_researchgrade_map, path = \"deliverables\")\n#> Saving 7 x 5 in image\n\nCan multiple projects be presented in a single map?\nCombine multiple iNaturalist project data by creating a project variable which can be used as a color indicator when mapping.\nThe $project value will refer to the project’s ID, in this case I’m using “Coastal” and “Piedmont”.\nCreate a new data.frame where both coastal and piedmont projects are included by using bind_rows().\nNow the data is ready to be plotted.\n\n# Add a project indicator variable\ncoastal_researchgrade$project <- \"Coastal\"\npiedmont_researchgrade$project <- \"Piedmont\"\n\n# Combine project data into a single sf object\nregion_researchgrade <-\n  dplyr::bind_rows(\n    coastal_researchgrade,\n    piedmont_researchgrade\n  )\n\nmasternat_map <- ggplot() +\n  mapboxapi::layer_static_mapbox(\n    location = region_researchgrade,\n    style_url = \"mapbox://styles/mapbox/light-v10\"\n  ) +\n  ggplot2::geom_sf(\n    mapping = aes(color = project),\n    size = 1,\n    alpha = 0.5,\n    shape = 4,\n    data = region_researchgrade\n  ) +\n  # ggplot2::geom_sf_label() +\n  labs(\n    title = \"Maryland Master Naturalist Research Grade Observations\",\n    caption = \"Data combined from piedmont and coastal regional projects\"\n  ) +\n  ggplot2::theme_classic()\n\nmasternat_map\n\n\n\nggplot2::ggsave(\"masternat_map.png\", plot = masternat_map, path = \"deliverables\")\n#> Saving 7 x 5 in image\n\nWe can look at location and number of observations reported by each user\n\n\n# Use region_researchgrade data to plot the number of observations by users.\n# Use color aesthic to distinguish between observations for each project.\nmasternat_user_plot <-\n  ggplot(region_researchgrade, aes(user.login, fill = project)) +\n  ggplot2::geom_bar() +\n  scale_fill_brewer(\n    type = \"qual\",\n    palette = \"Dark2\",\n  ) +\n  # Flip axes so usernames are more legible\n  coord_flip() +\n  guides(fill = \"none\") +\n  labs(title = \"Observations per User by Project\") +\n  # Add legend\n  guides(fill = guide_legend(title = \"Project\")) +\n  ggplot2::theme_classic()\n\nmasternat_user_plot\n\n\n\n\nggplot2::ggsave(\"masternat_user_plot.png\", plot = masternat_user_plot, path = \"deliverables\")\n#> Saving 7 x 5 in image\n\npiedmont_user_map <- ggplot() +\n  mapboxapi::layer_static_mapbox(\n    location = piedmont_researchgrade,\n    style_url = \"mapbox://styles/mapbox/light-v10\"\n  ) +\n  ggplot2::geom_sf(\n    mapping = aes(color = user.login),\n    size = 2,\n    alpha = 0.5,\n    data = piedmont_researchgrade\n  ) +\n  # Add labels\n  labs(\n    title = \"Maryland Master Naturalist Observations by User\\nPiedmont Region\",\n    caption = \"Data courtesy of iNaturalist: Master Naturalist Program - Piedmont Region\\nproject_id = 1396\"\n  ) +\n  ggplot2::theme_classic()\n\npiedmont_user_map\n\n\n\n# FIXME: adjust caption to fit in whitespace\n\nggplot2::ggsave(\"piedmont_user_map.png\", plot = piedmont_user_map, path = \"deliverables\")\n#> Saving 7 x 5 in image\n\n# Filter out observations from the user with the most observations according to masternat_user_plot\nmmn_noriko_obs <-\n  filter(piedmont_researchgrade, user.login == \"mmn_noriko\")\n# Map top user's observations\ntopuser_piedmont <- ggplot() +\n  mapboxapi::layer_static_mapbox(\n    location = mmn_noriko_obs,\n    style_url = \"mapbox://styles/mapbox/light-v10\"\n  ) +\n  # Set color aesthetic to the number of photos taken per observation\n  ggplot2::geom_sf(\n    mapping = aes(color = observation_photos_count),\n    size = 2,\n    alpha = 0.25,\n    data = mmn_noriko_obs\n  ) +\n  labs(\n    title = \"Top User's Observations in MD Piedmont Region\",\n    caption = 'User \"mmn_noriko\" reported 2110 research grade observations\\n for the Maryland Master Naturalist Piedmont Region iNaturalist Project'\n  ) +\n  ggplot2::theme_classic()\n\ntopuser_piedmont\n\n\n\n# FIXME: Center title label, change colors of points, increase transparency\nggplot2::ggsave(\"topuser_piedmont.png\", plot = topuser_piedmont, path = \"deliverables\")\n#> Saving 7 x 5 in image\n\n\ncoastal_user_map <- ggplot() +\n  mapboxapi::layer_static_mapbox(\n    location = coastal_researchgrade,\n    style_url = \"mapbox://styles/mapbox/light-v10\"\n  ) +\n  ggplot2::geom_sf(\n    mapping = aes(color = user.login),\n    size = 2,\n    alpha = 0.5,\n    data = coastal_researchgrade\n  ) +\n  guides(fill = guide_legend(ncol = 2)) +\n  # Add labels\n  labs(\n    title = \"Maryland Master Naturalist Observations by User\\nCoastal Region\",\n    caption = \"Data courtesy of iNaturalist: Master Naturalist Program - Coastal Plain \\n project_id = 474\"\n  ) +\n  ggplot2::theme_classic()\n\ncoastal_user_map\n\n\n\n# FIXME: Make legend two columns\nggplot2::ggsave(\"coastal_usermap.png\", plot = coastal_user_map, path = \"deliverables\")\n#> Saving 7 x 5 in image\n\n# Filter out observations from the user with the most observations according to masternat_user_plot\ntonyiajohnson_obs <-\n  dplyr::filter(coastal_researchgrade, user.login == \"tonyiajohnson\")\n# Map top user's observations\ntopuser_coastal <- ggplot() +\n  mapboxapi::layer_static_mapbox(\n    location = tonyiajohnson_obs,\n    style_url = \"mapbox://styles/mapbox/light-v10\"\n  ) +\n  ggplot2::geom_sf(\n    mapping = aes(color = observation_photos_count),\n    size = 2,\n    alpha = 0.5,\n    data = tonyiajohnson_obs\n  ) +\n  scale_fill_brewer(\n    type = \"seq\",\n    palette = \"OrRd\"\n  ) +\n  labs(\n    title = \"Top User's Observations in MD Coastal Region\",\n    caption = 'User \"tonyiajohnson\" reported 2110 research grade observations\\n for the Maryland Master Naturalist Coastal Region iNaturalist Project'\n  ) +\n  ggplot2::theme_classic() +\n  ggplot2::theme(\n    axis.text.x = element_text(angle = -30, vjust = 1, hjust = 0)\n  )\n\ntopuser_coastal\n\n\n\n# FIXME: adjust label positions, widen x-limits\nggplot2::ggsave(\"topuser_coastal.png\", plot = topuser_coastal, path = \"deliverables\")\n#> Saving 7 x 5 in image\n\nWe can look at variation by kingdom, genus and species:\n\nGBIF_kingdoms_bar <-\n  ggplot(GBIF_sm, aes(x = kingdom, fill = kingdom)) +\n  ggplot2::geom_bar() +\n  scale_fill_brewer(\n    type = \"qual\",\n    palette = \"Dark2\"\n  ) +\n  guides(fill = \"none\") +\n  ggplot2::geom_text(\n    aes(\n      label = ..count..\n    ),\n    stat = \"count\",\n    vjust = -0.2,\n    colour = \"black\"\n  ) +\n  labs(\n    title = \"Distribution of Observations by Kingdom\",\n    caption = \"Data courtesy of iNaturalist Research-Grade Observations via GBIF\"\n  ) +\n  ggplot2::theme_classic()\n\nGBIF_kingdoms_bar\n#> Warning: The dot-dot notation (`..count..`) was deprecated in ggplot2 3.4.0.\n#> i Please use `after_stat(count)` instead.\n\n\n\n# FIXME: Center title position\n\nggplot2::ggsave(\"GBIF_kingdoms_bar.png\", plot = GBIF_kingdoms_bar, path = \"deliverables\")\n#> Saving 7 x 5 in image\n\n# Create data\nplants_vs_animals <-\n  filter(\n    GBIF_sm, kingdom == c(\"Animalia\", \"Plantae\")\n  )\n\n\n\n# plants_vs_animals_bar <-\n#  ggplot(plants_vs_animals, aes(x = kingdom, fill = kingdom)\n#  ) +\n#  ggplot2::geom_bar() +\n#  scale_fill_brewer(\n#    type = \"qual\",\n#    palette = \"Dark2\") +\n#  guides(fill = \"none\") +\n#   labs(title = \"Plants vs Animals\") +\n#   ggplot2::geom_text(aes(label = ..count..), stat = \"count\", vjust = -0.2, colour = \"black\")\n\n# plants_vs_animals_bar\n# ggplot2::ggsave(\"plants_vs_animals_bar.png\", plot = plants_vs_animals_bar, path = \"deliverables\")\n\n# Compute the position of labels\n# data <- plants_vs_animals %>%\n#  arrange(desc(kingdom)) %>%\n# mutate(prop = kingdom / sum(plants_vs_animals$kingdom) *100) %>%\n#  mutate(ypos = cumsum(prop)- 0.5*prop )\n\n# Basic piechart\n# ggplot(data, aes(x=\"\", y=prop, fill=group)) +\n#  ggplot2::geom_bar(stat=\"identity\", width=1, color=\"white\") +\n#  coord_polar(\"y\", start=0) +\n#  ggplot2::theme_void() +\n#  ggplot2::theme(legend.position=\"none\") +\n\n#  ggplot2::geom_text(aes(y = ypos, label = group), color = \"white\", size=6) +\n#  scale_fill_brewer(palette=\"Set1\")\n\n# Other kingdoms\n# minorities_kingdoms <-\n#  filter(\n#    GBIF_sm, kingdom == c(\"Bacteria\", \"Chromista\", \"Fungi\", \"Protozoa\", \"Viruses\"))\n# bar chart\n# minorities_kingdoms_bar <-\n#  ggplot(minorities_kingdoms, aes(x = kingdom, fill = kingdom)\n#  ) +\n#  ggplot2::geom_bar() +\n#  scale_fill_brewer(\n#    type = \"qual\",\n#    palette = \"Dark2\") +\n#  guides(fill = \"none\") +\n#   labs(title = \"Minority Kingdoms Observed\") +\n#   ggplot2::geom_text(aes(label = ..count..), stat = \"count\", vjust = -0.2, colour = \"black\")\n\n# minorities_kingdoms_bar\n\nOf the 84 unique bird species observed by users in Maryland, how many were corvids (crow family)?\nFIlter GBIF_MD_research_grade to return only observations in the family “Corvidae”. Make sure to disclude observations where the species attribute is missing or NA. Transform dataframe into a spatial dataframe, assigning the lat/lon columns to coords to create the ggplot2::geometry column.\nWhat species of corvidae were observed in Maryland? What was the most common corvid species? The least common?\nPlot corvid observations on a bar chart. Set aesthetics to show each species as its own bar. Label count at the top of each bar. Set fill to species. Set scale_fill_brewer aesthetics type as qualitative and palette to Set1. Call coord_flip to rotate plot so the x-axis and y-axis are switched.\n\nMD_corvids <-\n  GBIF_sm %>%\n  group_by(genus) %>%\n  filter(family == \"Corvidae\", !is.na(species))\n\nMD_corvids_bar <-\n  ggplot(MD_corvids, aes(x = species, fill = species)) +\n  ggplot2::geom_bar() +\n  scale_fill_brewer(\n    type = \"qual\",\n    palette = \"Set1\"\n  ) +\n  guides(fill = \"none\") +\n  coord_flip() +\n  ggplot2::theme_classic()\n\nMD_corvids_bar\n\n\n\nggplot2::ggsave(\"MD_corvids_bar.png\", plot = MD_corvids_bar, path = \"deliverables\")\n#> Saving 7 x 5 in image\n\nWhere were corvids observed in Maryland? Are there any hotspots for corvid observations?\n\nMD_corvid_sightings <- ggplot() +\n  mapboxapi::layer_static_mapbox(\n    location = MD_corvids,\n    style_url = \"mapbox://styles/mapbox/light-v10\"\n  ) +\n  ggplot2::geom_sf(\n    data = MD_corvids,\n    aes(color = species),\n    alpha = 0.7,\n    size = 0.3\n  ) +\n  scale_color_brewer(\n    type = \"qual\",\n    palette = \"Set1\"\n  ) +\n  labs(\n    title = \"Crows and Blue Jays in Maryland\",\n    caption = \"Data courtesy of iNaturalist Research-Grade Observations via GBIF\"\n  ) +\n  ggplot2::theme_classic() +\n  ggplot2::theme(\n    legend.position = \"bottom\"\n  )\n\nMD_corvid_sightings\n\n\n\n# FIXME: Center title position\nggplot2::ggsave(\"MD_corvid_sightings.png\", plot = MD_corvid_sightings, path = \"deliverables\")\n#> Saving 7 x 5 in image\n\n\n# Create new data.frame containing only insect sightings\nMD_insects <-\n  GBIF_sm %>%\n  dplyr::group_by(family) %>%\n  dplyr::filter(class == \"Insecta\", !is.na(species))\n# What families of insects are most commonly sighted?\nMD_insects_by_family <- MD_insects %>%\n  dplyr::summarise(max = max(family), n = n()) %>%\n  dplyr::arrange(desc(n))\n# Nymphalidae   n = 3826\n# Noctuidae  n = 3788\n# Libellulidae  n = 2900\n# What are the least commonly sighted?\n# There 40 families of insects that have only been reported once\n#\n# Filter the sf data.frame down to the 40 insect families with single reportings (n = 1)\nMD_rare_insects_inc <- MD_insects_by_family %>%\n  dplyr::filter(n == 1)\n# Drop ggplot2::geometry before performing join\nMD_rare_insects_df <- sf::st_drop_geometry(MD_rare_insects_inc)\n# Perform left join where x = MD_rare_insects and y = MD_insects, resulting in a data.frame of 40 rows x 12 columns.\nMD_rare_insects <-\n  left_join(MD_rare_insects_df, MD_insects)\n#> Joining, by = \"family\"\n# Transform back into sf object.\nMD_rare_insects_sf <- sf::st_as_sf(MD_rare_insects, crs = 3857)\n\n# Map rare insect sightings\nMD_rare_insects_map <- ggplot() +\n  mapboxapi::layer_static_mapbox(\n    location = MD_rare_insects_sf,\n    style_url = \"mapbox://styles/mapbox/light-v10\"\n  ) +\n  ggplot2::geom_sf(\n    data = MD_rare_insects_sf,\n    shape = 17,\n    size = 3,\n    alpha = 0.5,\n    color = \"orange\"\n  ) +\n  scale_color_brewer(\n    type = \"qual\",\n    palette = \"Set2\"\n  ) +\n  labs(\n    title = \"Rare Sightings of Insects in Maryland\",\n    caption = \"Plotted are 40 unique insect species reported by users in Maryland on iNaturalist.\\nNote: The rarity of these insect species have not been cross-referenced with ICUN Red List.\"\n  ) +\n  ggplot2::theme_classic() +\n  ggplot2::theme(\n    legend.position = \"none\"\n  )\n\nMD_rare_insects_map\n\n\n\n\nggplot2::ggsave(\"MD_rare_insects_map.png\", plot = MD_rare_insects_map, path = \"deliverables\")\n#> Saving 7 x 5 in image"
  },
  {
    "objectID": "explore_inaturalist_presentation.html#resources",
    "href": "explore_inaturalist_presentation.html#resources",
    "title": "Exploring iNaturalist Data",
    "section": "Resources",
    "text": "Resources\n\nrinat, rgbif (Accessing data through APIs)\ntidyverse (For tidying data)\n\ndplyr, tidyr, ggplot2, sf, readr\n\njanitor\nmapboxapi (base maps)\nDataCamp, package documentation, iNaturalist and GBIF API documentation"
  },
  {
    "objectID": "project-documentation.html",
    "href": "project-documentation.html",
    "title": "Final Project",
    "section": "",
    "text": "In framing your project, look for opportunities to apply one or more of the six models of local practice described in @loukissas2019:\n\nLook at the data setting, not just the data set\n\n“Place is something less easily defined: contingent on experience, defined by meaning, susceptible to changing social designations,” (p. 20 Loukissas)\niNaturalist as a research and community platform – a cyperspace\nAllows citizen engagement in grassroots scientific research\n\nHow is iNaturalist an ideal platform for citizen science? Or is it? Can if be improved?\nDoes iNaturalist meet the goal of obtaining meaningful and useful data that advances scientific research and can be applied to real world problems?\nIs iNatualist data easily accessible for research purposes?\n\nrinat: Access iNaturalist data with R\nGBIF: Global Biodiversity Information Facility\n“Anyone with an account can export data from iNaturalist as a spreadsheet in csv format. You can start from the Explore page and click download in the lower right of the filters box. Or you can go directly to the export page (https://www.inaturalist.org/observations/export).\nIf you plan to publish a paper using iNaturalist data, we recommend downloading iNaturalist data from the Global Biodiversity Information Facility because they will issue a citable DOI (see below for more details).” (https://www.inaturalist.org/pages/help#export)\n\n\n\nMake place part of data presentation\n\nCan amateur bioblitz/biodiversity observations hold enough merit to be included in data sets for professional or academic research?\n\noffers research grade status\nWho qualifies the data as research grade?\n\n“Observations become ”Research Grade” when the community agrees on species-level ID or lower, i.e. when more than 2/3 of identifiers agree on a taxon” (https://www.inaturalist.org/pages/help#quality)\n\nHow are identifications confirmed?\n\n\nTake a comparative approach to data analysis\n\nHow does citizen science data compare to professional inventory data in the same or similar areas?\nHow does user access to iNaturalist data compare to that of Socrata data or iMap data?\n\nlimited # of requests due to API limits (10,000 requests per day, 100 requests per minute)\nDoes iNaturalist or citizen science data have a place in research?\n\n\nCreate counterdata to challenge normative algorithms\n\niNaturalist data should be considered the counterdata to data collected by government, academic, and industry institutions.\n\nCan iNaturalist data be used to support finding in more official data formats?\n\n\nCreate interfaces that cause friction\n\nOffers map interface to view all observations, filter observations by various attributes (ei. biota, location, temporal, author), calculates general statistics of Project’s observation data.\nWhere could further improvements be made to the interface?\n\nUse data to build relationships\n\n\n\n\n\n\n\nlibrary(tmap)\n\n# remotes::install_github(\"ropensci/rinat\")\n# remotes::install_github(\"ropensci/rgbif\")\nlibrary(rinat) # R package to retreive data from iNaturalist database\nlibrary(rgbif) # R package to retreive data from GBIF database\nlibrary(tidyverse)\n\nWarning: package 'tidyverse' was built under R version 4.1.3\n\n\n-- Attaching packages --------------------------------------- tidyverse 1.3.2 --\nv ggplot2 3.4.0      v purrr   0.3.5 \nv tibble  3.1.8      v dplyr   1.0.10\nv tidyr   1.2.1      v stringr 1.4.1 \nv readr   2.1.3      v forcats 0.5.2 \n\n\nWarning: package 'ggplot2' was built under R version 4.1.3\n\n\nWarning: package 'tibble' was built under R version 4.1.3\n\n\nWarning: package 'tidyr' was built under R version 4.1.3\n\n\nWarning: package 'readr' was built under R version 4.1.3\n\n\nWarning: package 'purrr' was built under R version 4.1.3\n\n\nWarning: package 'dplyr' was built under R version 4.1.3\n\n\nWarning: package 'stringr' was built under R version 4.1.3\n\n\nWarning: package 'forcats' was built under R version 4.1.3\n\n\n-- Conflicts ------------------------------------------ tidyverse_conflicts() --\nx dplyr::filter() masks stats::filter()\nx dplyr::lag()    masks stats::lag()\n\nlibrary(ggplot2) # R package for creating plots and maps\nlibrary(spData) # R package for importing US states data\n\nWarning: package 'spData' was built under R version 4.1.3\n\n\nTo access larger datasets in this package, install the spDataLarge\npackage with: `install.packages('spDataLarge',\nrepos='https://nowosad.github.io/drat/', type='source')`\n\nlibrary(sf) # R package for working with simple features\n\nWarning: package 'sf' was built under R version 4.1.3\n\n\nLinking to GEOS 3.10.2, GDAL 3.4.1, PROJ 7.2.1; sf_use_s2() is TRUE\n\n\n\n\nUse get_inat_obs_project() to get observation data.\n\ntype = “info” argument returns # of observations in data set\ntype = “observations” argument returns all observations in data set\ncannot filter data from project using this function.\n\n\n# Get spatial data and save into local data folder\nMD_masternat_piedmont <- get_inat_obs_project(\"maryland-master-naturalist-program-piedmont-region\", type = \"observations\")\n\nreadr::write_rds(MD_masternat_piedmont, here::here(\"data/MD_masternat_piedmont.rds\"))\n\nMD_masternat_coastal <- get_inat_obs_project(\"maryland-master-naturalist-program-coastal-plain\", type = \"observations\")\n\nreadr::write_rds(MD_masternat_coastal, here::here(\"data/MD_masternat_coastal.rds\"))\n\nMD_biodiversity <- get_inat_obs_project(\"biodiversity-of-maryland\", type = \"observations\")\n\ndata(\"us_states\")\nmaryland_data <- filter(us_states, NAME == \"Maryland\")\n\nreadr::write_rds(maryland_data, here::here(\"data/maryland_data.rds\"))\n\n\n\n\n\n# Read data saved to data folder\nMD_masternat_piedmont <- readr::read_rds(here::here(\"data/MD_masternat_piedmont.rds\"))\n\nMD_masternat_coastal <- readr::read_rds(here::here(\"data/MD_masternat_coastal.rds\"))\n\nMD_biodiversity <- readr::read_rds(here::here(\"data/MD_biodiversity.rds\"))\n\nmaryland_data <- readr::read_rds(here::here(\"data/maryland_data.rds\"))\n\n\nOK – I can access spatial datasets from iNaturalist using rinat :: get_inat_obs_projct(). However, for projects with more observations I cannot subset data using this function, so it will take a long time to retrieve the full dataset (ei. MD_masternat_piedmont only has 3934 observations, whereas the MD_biodiversity contains over 1 million observations and can only return 10,000 observations due to the limits of iNaturalist’s current API.\n\nActually, only returned 9999 observations and displayed this note:\n\nNote: mismatch between number of observations reported and returned by the API.\n\n\n\n\n\n\n\n\n## Map 100 spotted salamanders\na_mac <- get_inat_obs(taxon_name = \"Ambystoma maculatum\", year = 2021)\nsalamander_map <- inat_map(a_mac, plot = FALSE)\n\n# Further customise the returned ggplot object\nsalamander_map + borders(\"state\") + theme_bw()\n\nWarning: Removed 3 rows containing missing values (`geom_point()`).\n\n\n\n\n\nAttempting to reduce the number of columns (75) down to a manageable and also relevent number of columns.\nIs there a list of column descriptions anywhere in the iNaturalist API documentation?\n\n“id” = unique observation ID\n“taxon.id” or “taxon_id = scientific name\n“observed_on” = user reported date of observation\n“description” = user reported qualitative data to help with species ID\n“place_guess” = name of location\n“latitude” & “longitude”\n“quality_grade” = level of confidence of identification; values are: “needs id” or “research”\n\n\n\n\n\n\n\n# Review column names and column data types\nglimpse(MD_masternat_piedmont)\n\nRows: 3,941\nColumns: 75\n$ id                                <int> 141801437, 141712683, 141636261, 141~\n$ observed_on                       <chr> \"2022-11-11\", \"2022-11-11\", \"2022-11~\n$ description                       <chr> \"\", \"\", \"\", \"\", \"\", NA, \"10 trunks!!~\n$ latitude                          <chr> \"39.1777871858\", \"39.1778806261\", \"3~\n$ longitude                         <chr> \"-76.9985153071\", \"-76.9985562396\", ~\n$ map_scale                         <int> NA, NA, NA, NA, NA, NA, NA, NA, NA, ~\n$ timeframe                         <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, ~\n$ species_guess                     <chr> \"\", \"\", \"\", \"Bald Eagle\", \"Red-shoul~\n$ user_id                           <int> 3528088, 3528088, 3528088, 3528088, ~\n$ taxon_id                          <int> 296661, 58727, 54841, 5305, 5206, 47~\n$ created_at                        <chr> \"2022-11-12T17:48:43.422Z\", \"2022-11~\n$ updated_at                        <chr> \"2022-11-12T17:48:55.003Z\", \"2022-11~\n$ place_guess                       <chr> \"Clarksville, MD, US\", \"Clarksville,~\n$ id_please                         <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, F~\n$ observed_on_string                <chr> \"2022-11-11 13:32:03-05:00\", \"2022-1~\n$ iconic_taxon_id                   <int> 1, 47126, 47126, 3, 3, 47178, NA, 47~\n$ num_identification_agreements     <int> 0, 0, 0, 4, 3, 0, 0, 0, 0, 1, 2, 0, ~\n$ num_identification_disagreements  <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ~\n$ time_observed_at                  <chr> \"2022-11-11T18:32:03.000Z\", \"2022-11~\n$ time_zone                         <chr> \"Eastern Time (US & Canada)\", \"Easte~\n$ location_is_exact                 <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, F~\n$ delta                             <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, F~\n$ positional_accuracy               <int> 4, 4, 4, NA, NA, 442, 2177, 4, 4, 4,~\n$ private_latitude                  <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, ~\n$ private_longitude                 <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, ~\n$ geoprivacy                        <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, ~\n$ quality_grade                     <chr> \"needs_id\", \"needs_id\", \"needs_id\", ~\n$ positioning_method                <chr> NA, NA, NA, NA, NA, \"gps\", \"gps\", NA~\n$ positioning_device                <chr> NA, NA, NA, NA, NA, \"gps\", \"gps\", NA~\n$ out_of_range                      <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, ~\n$ license                           <chr> \"CC-BY-NC\", \"CC-BY-NC\", \"CC-BY-NC\", ~\n$ uri                               <chr> \"https://www.inaturalist.org/observa~\n$ observation_photos_count          <int> 2, 1, 1, 1, 1, 3, 3, 1, 1, 2, 1, 1, ~\n$ comments_count                    <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ~\n$ zic_time_zone                     <chr> \"America/New_York\", \"America/New_Yor~\n$ oauth_application_id              <int> 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 3, ~\n$ observation_sounds_count          <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ~\n$ identifications_count             <int> 1, 1, 1, 5, 4, 1, 0, 1, 1, 2, 3, 1, ~\n$ captive                           <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, F~\n$ community_taxon_id                <int> NA, NA, NA, 5305, 5206, NA, NA, NA, ~\n$ site_id                           <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ~\n$ old_uuid                          <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, ~\n$ public_positional_accuracy        <int> 4, 4, 4, NA, NA, 442, 2177, 4, 4, 4,~\n$ mappable                          <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, ~\n$ cached_votes_total                <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ~\n$ last_indexed_at                   <chr> \"2022-11-12T17:49:43.701Z\", \"2022-11~\n$ private_place_guess               <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, ~\n$ uuid                              <chr> \"bfbe1944-324f-4bd4-be5b-79fe35e1e90~\n$ taxon_geoprivacy                  <chr> NA, NA, \"open\", NA, \"open\", NA, NA, ~\n$ tag_list                          <list> [], [], [], [], [], [], [], [], [],~\n$ short_description                 <chr> \"\", \"\", \"\", \"\", \"\", NA, \"10 trunks!!~\n$ user_login                        <chr> \"vulture63\", \"vulture63\", \"vulture63~\n$ iconic_taxon_name                 <chr> \"Animalia\", \"Plantae\", \"Plantae\", \"A~\n$ faves_count                       <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ~\n$ created_at_utc                    <chr> \"2022-11-12T17:48:43.422Z\", \"2022-11~\n$ updated_at_utc                    <chr> \"2022-11-12T17:48:55.003Z\", \"2022-11~\n$ time_observed_at_utc              <chr> \"2022-11-11T18:32:03.000Z\", \"2022-11~\n$ owners_identification_from_vision <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, FALSE,~\n$ photos                            <list> [<data.frame[2 x 26]>], [<data.fram~\n$ coordinates_obscured              <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, ~\n$ taxon.id                          <int> 296661, 58727, 54841, 5305, 5206, 47~\n$ taxon.name                        <chr> \"Dicyrtomina minuta\", \"Berberis thun~\n$ taxon.rank                        <chr> \"species\", \"species\", \"species\", \"sp~\n$ taxon.ancestry                    <chr> \"48460/1/47120/372739/243773/49470/1~\n$ taxon.common_name.id              <int> NA, 155712, 149927, 6859, 6736, 7849~\n$ taxon.common_name.name            <chr> NA, \"Japanese barberry\", \"white will~\n$ taxon.common_name.is_valid        <lgl> NA, TRUE, TRUE, TRUE, TRUE, TRUE, NA~\n$ taxon.common_name.lexicon         <chr> NA, \"English\", \"English\", \"English\",~\n$ iconic_taxon.id                   <int> 1, 47126, 47126, 3, 3, 47178, NA, 47~\n$ iconic_taxon.name                 <chr> \"Animalia\", \"Plantae\", \"Plantae\", \"A~\n$ iconic_taxon.rank                 <chr> \"kingdom\", \"kingdom\", \"kingdom\", \"cl~\n$ iconic_taxon.rank_level           <dbl> 70, 70, 70, 50, 50, 50, NA, 70, 50, ~\n$ iconic_taxon.ancestry             <chr> \"48460\", \"48460\", \"48460\", \"48460/1/~\n$ user.login                        <chr> \"vulture63\", \"vulture63\", \"vulture63~\n$ user.user_icon_url                <chr> \"https://static.inaturalist.org/atta~\n\ncolnames(MD_masternat_piedmont)\n\n [1] \"id\"                                \"observed_on\"                      \n [3] \"description\"                       \"latitude\"                         \n [5] \"longitude\"                         \"map_scale\"                        \n [7] \"timeframe\"                         \"species_guess\"                    \n [9] \"user_id\"                           \"taxon_id\"                         \n[11] \"created_at\"                        \"updated_at\"                       \n[13] \"place_guess\"                       \"id_please\"                        \n[15] \"observed_on_string\"                \"iconic_taxon_id\"                  \n[17] \"num_identification_agreements\"     \"num_identification_disagreements\" \n[19] \"time_observed_at\"                  \"time_zone\"                        \n[21] \"location_is_exact\"                 \"delta\"                            \n[23] \"positional_accuracy\"               \"private_latitude\"                 \n[25] \"private_longitude\"                 \"geoprivacy\"                       \n[27] \"quality_grade\"                     \"positioning_method\"               \n[29] \"positioning_device\"                \"out_of_range\"                     \n[31] \"license\"                           \"uri\"                              \n[33] \"observation_photos_count\"          \"comments_count\"                   \n[35] \"zic_time_zone\"                     \"oauth_application_id\"             \n[37] \"observation_sounds_count\"          \"identifications_count\"            \n[39] \"captive\"                           \"community_taxon_id\"               \n[41] \"site_id\"                           \"old_uuid\"                         \n[43] \"public_positional_accuracy\"        \"mappable\"                         \n[45] \"cached_votes_total\"                \"last_indexed_at\"                  \n[47] \"private_place_guess\"               \"uuid\"                             \n[49] \"taxon_geoprivacy\"                  \"tag_list\"                         \n[51] \"short_description\"                 \"user_login\"                       \n[53] \"iconic_taxon_name\"                 \"faves_count\"                      \n[55] \"created_at_utc\"                    \"updated_at_utc\"                   \n[57] \"time_observed_at_utc\"              \"owners_identification_from_vision\"\n[59] \"photos\"                            \"coordinates_obscured\"             \n[61] \"taxon.id\"                          \"taxon.name\"                       \n[63] \"taxon.rank\"                        \"taxon.ancestry\"                   \n[65] \"taxon.common_name.id\"              \"taxon.common_name.name\"           \n[67] \"taxon.common_name.is_valid\"        \"taxon.common_name.lexicon\"        \n[69] \"iconic_taxon.id\"                   \"iconic_taxon.name\"                \n[71] \"iconic_taxon.rank\"                 \"iconic_taxon.rank_level\"          \n[73] \"iconic_taxon.ancestry\"             \"user.login\"                       \n[75] \"user.user_icon_url\"               \n\n# lat/lon data is chr data; needs to be numeric in order to used as geom\n#\n# Check coordinate reference system of all data\n\nbasemap_crs <- st_crs(maryland_data)\n# CRS = \"EPSG: 4269\"\nst_crs(MD_masternat_coastal)\n\nCoordinate Reference System: NA\n\n# CRS = NA\nst_crs(MD_masternat_piedmont)\n\nCoordinate Reference System: NA\n\n# CRS = NA\nst_crs(MD_biodiversity)\n\nCoordinate Reference System: NA\n\n# CRS = NA\n\n\n\n\n\nosmdata::getbb(\"Maryland\")\n\n        min       max\nx -79.48731 -74.98520\ny  37.88653  39.72288\n\nMD_bbox <- sf::st_bbox(c(xmin = -79.48731, xmax = -74.98520, ymin = 37.88653, ymax = 39.72288), crs = st_crs(4269))\nbasemap <- basemaps::set_defaults(ext = MD_bbox, map_service = \"osm\", map_type = \"world_light_gray_base\")\n\n\n\n\n\n# Prep MD_masternat_coastal data\n# Convert lat/lon columns to numeric type\nMD_masternat_coastal$latitude <- as.numeric(as.character(MD_masternat_coastal$latitude))\nMD_masternat_coastal$longitude <- as.numeric(as.character(MD_masternat_coastal$longitude))\n# Check for NAs in lat/lon columns\ncostal_na_lat <- which(is.na(MD_masternat_coastal$latitude))\ncoastal_na_lon <- which(is.na(MD_masternat_coastal$longitude))\n# Both columns return NA values in rows: 1341, 1342, 1344, 1382\n# Remove rows in dateframe with NA values\nMD_masternat_coastal_drop_na <- MD_masternat_coastal %>%\n  drop_na(latitude)\n# Convert iNaturalist dataframes into sf objects\nMD_masternat_coastal_sf <- sf::st_as_sf(MD_masternat_coastal_drop_na, coords = c(\"longitude\", \"latitude\"), crs = basemap_crs)\n\n\n# Repeat aboce steps for MD_masternat_piedmont data\n# Convert lat/lon columns to numeric type\nMD_masternat_piedmont$latitude <- as.numeric(as.character(MD_masternat_piedmont$latitude))\nMD_masternat_piedmont$longitude <- as.numeric(as.character(MD_masternat_piedmont$longitude))\n# Check for NAs in lat/lon columns\npiedmont_na_lat <- which(is.na(MD_masternat_piedmont$latitude))\npiedmont_na_lon <- which(is.na(MD_masternat_piedmont$longitude))\n# Both columns return NA values in 100 rows\n# Remove rows in dateframe with NA values\nMD_masternat_piedmont_drop_na <- MD_masternat_piedmont %>%\n  drop_na(latitude)\n# Convert iNaturalist dataframes into sf objects\nMD_masternat_piedmont_sf <- sf::st_as_sf(MD_masternat_piedmont_drop_na, coords = c(\"longitude\", \"latitude\"), crs = basemap_crs)\n\n\n# Repeat aboce steps for MD_biodiversity data\n# Convert lat/lon columns to numeric type\nMD_biodiversity$latitude <- as.numeric(as.character(MD_biodiversity$latitude))\nMD_biodiversity$longitude <- as.numeric(as.character(MD_biodiversity$longitude))\n# Check for NAs in lat/lon columns\nbiodiversity_na_lat <- which(is.na(MD_biodiversity$latitude))\nbiodiversity_na_lon <- which(is.na(MD_biodiversity$longitude))\n# Both columns return NA values\n# Remove rows in dateframe with NA values\nMD_biodiversity_drop_na <- MD_biodiversity %>%\n  drop_na(latitude)\n# Convert iNaturalist dataframes into sf objects\nMD_biodiversity_sf <- sf::st_as_sf(MD_biodiversity_drop_na, coords = c(\"longitude\", \"latitude\"), crs = basemap_crs)\n\n\n\n\n\nNote: column names are not consistent between all iNaturalist Projects (see taxon ID column)\n\nShould I rename all the columns as part of my data cleaning in case I want to join datasets later?\n\n\n\n# Create new dataframe, filtering out unecessary variables\n# Keep variables that will be useful in further analysis\n# Coastal\nMD_masternat_coastal_sm <-\n  MD_masternat_coastal_sf %>%\n  select(all_of(c(\n    \"id\",\n    \"taxon_id\",\n    \"observed_on\",\n    \"description\",\n    \"place_guess\",\n    \"quality_grade\"\n  )))\n# Filter dataframe down to research quality observations\nMD_masternat_coastal_researchgrade <-\n  filter(MD_masternat_coastal_sm, quality_grade == \"research\")\n# Piedmont\nMD_masternat_piedmont_sm <-\n  MD_masternat_piedmont_sf %>%\n  select(all_of(c(\n    \"id\",\n    \"taxon_id\",\n    \"observed_on\",\n    \"description\",\n    \"place_guess\",\n    \"quality_grade\"\n  )))\n# Filter dataframe down to research quality observations\nMD_masternat_piedmont_researchgrade <-\n  filter(MD_masternat_piedmont_sm, quality_grade == \"research\")\n# Biodiversity data\nMD_biodiversity_sm <-\n  MD_biodiversity_sf %>%\n  select(all_of(c(\n    \"id\",\n    \"taxon.id\",\n    \"observed_on\",\n    \"description\",\n    \"place_guess\",\n    \"quality_grade\"\n  )))\n# Filter dataframe down to research quality observations\nMD_biodiversity_researchgrade <-\n  filter(MD_biodiversity_sm, quality_grade == \"research\")\n\n\n# Check CRS again\nst_crs(MD_masternat_coastal_sf)\n\nCoordinate Reference System:\n  User input: EPSG:4269 \n  wkt:\nGEOGCS[\"NAD83\",\n    DATUM[\"North_American_Datum_1983\",\n        SPHEROID[\"GRS 1980\",6378137,298.257222101,\n            AUTHORITY[\"EPSG\",\"7019\"]],\n        TOWGS84[0,0,0,0,0,0,0],\n        AUTHORITY[\"EPSG\",\"6269\"]],\n    PRIMEM[\"Greenwich\",0,\n        AUTHORITY[\"EPSG\",\"8901\"]],\n    UNIT[\"degree\",0.0174532925199433,\n        AUTHORITY[\"EPSG\",\"9122\"]],\n    AUTHORITY[\"EPSG\",\"4269\"]]\n\nst_crs(MD_masternat_piedmont_sf)\n\nCoordinate Reference System:\n  User input: EPSG:4269 \n  wkt:\nGEOGCS[\"NAD83\",\n    DATUM[\"North_American_Datum_1983\",\n        SPHEROID[\"GRS 1980\",6378137,298.257222101,\n            AUTHORITY[\"EPSG\",\"7019\"]],\n        TOWGS84[0,0,0,0,0,0,0],\n        AUTHORITY[\"EPSG\",\"6269\"]],\n    PRIMEM[\"Greenwich\",0,\n        AUTHORITY[\"EPSG\",\"8901\"]],\n    UNIT[\"degree\",0.0174532925199433,\n        AUTHORITY[\"EPSG\",\"9122\"]],\n    AUTHORITY[\"EPSG\",\"4269\"]]\n\nst_crs(MD_biodiversity_sf)\n\nCoordinate Reference System:\n  User input: EPSG:4269 \n  wkt:\nGEOGCS[\"NAD83\",\n    DATUM[\"North_American_Datum_1983\",\n        SPHEROID[\"GRS 1980\",6378137,298.257222101,\n            AUTHORITY[\"EPSG\",\"7019\"]],\n        TOWGS84[0,0,0,0,0,0,0],\n        AUTHORITY[\"EPSG\",\"6269\"]],\n    PRIMEM[\"Greenwich\",0,\n        AUTHORITY[\"EPSG\",\"8901\"]],\n    UNIT[\"degree\",0.0174532925199433,\n        AUTHORITY[\"EPSG\",\"9122\"]],\n    AUTHORITY[\"EPSG\",\"4269\"]]\n\n\n\n\n\n\n# Set up base map\ndata(\"us_states\")\nmaryland_data <- filter(us_states, NAME == \"Maryland\")\nmaryland_map <-\n  ggplot() +\n  geom_sf(data = maryland_data, color = \"black\", fill = NA)\nmaryland_map\n\n\n\n# Plot research grade data as layer on base map\n# Coastal\nMD_masternat_coastal_research_map <- maryland_map +\n  geom_sf(\n    mapping = aes(),\n    data = MD_masternat_coastal_researchgrade\n  ) +\n  labs(\n    title = \"Maryland Coastal Research Grade Observations\",\n    caption = \"Data courtesy of iNaturalist: Master Naturalist Program - Coastal Plain \\n project_id = 474\"\n  )\nMD_masternat_coastal_research_map\n\n\n\n# ADD THEME, TITLE, LABELS\n\n# Piedmont\nMD_masternat_piedmont_research_map <- maryland_map +\n  geom_sf(\n    mapping = aes(color = taxon_id),\n    data = MD_masternat_piedmont_researchgrade\n  ) +\n  labs(\n    title = \"Maryland Piedmont Research Grade Observations\",\n    caption = \"Data courtesy of iNaturalist: Master Naturalist Program - Piedmont Region \\n project_id = 1396\"\n  )\nMD_masternat_piedmont_research_map\n\n\n\n# ADD THEME, TITLE, LABELS\n\n# state biodiversity data\nMD_biodiversity_researchgrade_map <- maryland_map +\n  geom_sf(\n    mapping = aes(color = taxon.id),\n    data = MD_biodiversity_researchgrade\n  ) +\n  labs(\n    title = \"Maryland Biodiversity Research Grade Observations\",\n    caption = \"Data courtesy of iNaturalist: Maryland Biodiversity Project \\n project_id = 17241\"\n  )\nMD_biodiversity_researchgrade_map\n\n\n\n# ADD THEME, TITLE, LABELS\n\nAfter further research I have decided that accessing data through GBIF will be a more reliable way to gather data from iNaturalist.\n\nI will attempt to explore iNaturalist research-grade data.\nIs there a way to filter GBIF<iNaturalist<research-grade<by project? Or <geolocation?\n\nThere are advanced filter options on the GBIF website to filter down to geolocation.\nI’m not sure yet how to perform these filter options within R, but I’m not sure it’s necessary either.\n\n\n\n# Confirm 2-letter country code for United States\nrgb_country_codes(country_name = \"United\", fuzzy = FALSE)\n\n    code                                 name                      gbif_name\n2     AE                 United Arab Emirates           UNITED_ARAB_EMIRATES\n77    GB                       United Kingdom                 UNITED_KINGDOM\n228   TZ         Tanzania, United Republic of                       TANZANIA\n231   UM United States Minor Outlying Islands UNITED_STATES_OUTLYING_ISLANDS\n232   US                        United States                  UNITED_STATES\n\n\n\n# Recreate data occurance search done on website with the following filters:\n\n# country or area = United States of America\n# dataset = iNaturalist Research-grade Observations (50c9509d-22c7-4a22-a47d-8c48425ef4a7)\n# has coordinate = true\n# has geospatial issue = false\n# occurance statis = present\n# state province = Maryland\nGBIF_MD_research_grade <-\n  occ_search(\n    taxonKey = NULL,\n    scientificName = NULL,\n    country = \"US\",\n    datasetKey = \"50c9509d-22c7-4a22-a47d-8c48425ef4a7\",\n    hasCoordinate = TRUE,\n    hasGeospatialIssue = FALSE,\n    occurrenceStatus = \"present\",\n    stateProvince = \"Maryland\"\n  )\n\nreadr::write_rds(GBIF_MD_research_grade, here::here(\"data/GBIF_MD_research_grade.rds\"))\n\nGBIF_MD_research_grade <- readr::read_rds(here::here(\"data/GBIF_MD_research_grade.rds\"))\n# Subset data tibble and assign to original variable\n# FIXME: You should save the metadata attached to the original results from occ_search() in case you need it later. Your original code just replaced the original results with the data\nGBIF_MD_research_grade_full <- GBIF_MD_research_grade\nGBIF_MD_research_grade <- GBIF_MD_research_grade$data\n\n\n\n\n\n\n# Explore data\nglimpse(GBIF_MD_research_grade)\n\nRows: 500\nColumns: 88\n$ key                           <chr> \"3455477909\", \"3455493790\", \"3455493810\"~\n$ scientificName                <chr> \"Diphasiastrum digitatum (Dill. ex A.Bra~\n$ decimalLatitude               <dbl> 39.63978, 39.28838, 39.01215, 39.14230, ~\n$ decimalLongitude              <dbl> -76.73673, -76.58014, -77.04549, -77.249~\n$ issues                        <chr> \"cdround\", \"cdround\", \"cdround\", \"cdroun~\n$ datasetKey                    <chr> \"50c9509d-22c7-4a22-a47d-8c48425ef4a7\", ~\n$ publishingOrgKey              <chr> \"28eb1a3f-1c15-4a95-931a-4af90ecb574d\", ~\n$ installationKey               <chr> \"997448a8-f762-11e1-a439-00145eb45e9a\", ~\n$ publishingCountry             <chr> \"US\", \"US\", \"US\", \"US\", \"US\", \"US\", \"US\"~\n$ protocol                      <chr> \"DWC_ARCHIVE\", \"DWC_ARCHIVE\", \"DWC_ARCHI~\n$ lastCrawled                   <chr> \"2022-12-09T14:02:27.502+00:00\", \"2022-1~\n$ lastParsed                    <chr> \"2022-12-09T20:34:02.663+00:00\", \"2022-1~\n$ crawlId                       <int> 327, 327, 327, 327, 327, 327, 327, 327, ~\n$ hostingOrganizationKey        <chr> \"28eb1a3f-1c15-4a95-931a-4af90ecb574d\", ~\n$ basisOfRecord                 <chr> \"HUMAN_OBSERVATION\", \"HUMAN_OBSERVATION\"~\n$ occurrenceStatus              <chr> \"PRESENT\", \"PRESENT\", \"PRESENT\", \"PRESEN~\n$ taxonKey                      <int> 2688379, 5219681, 2493801, 2480542, 2435~\n$ kingdomKey                    <int> 6, 1, 1, 1, 1, 6, 6, 1, 1, 1, 1, 6, 1, 1~\n$ phylumKey                     <int> 7707728, 44, 44, 44, 44, 7707728, 770772~\n$ classKey                      <int> 245, 359, 212, 212, 359, 220, 220, 212, ~\n$ orderKey                      <int> 421, 1459, 729, 7191147, 732, 400, 408, ~\n$ familyKey                     <int> 6725, 9456, 9355, 2877, 9703, 6693, 6652~\n$ genusKey                      <int> 6385542, 2437489, 2493797, 2480517, 2435~\n$ speciesKey                    <int> 2688379, 5219681, 2493801, 2480542, 2435~\n$ acceptedTaxonKey              <int> 2688379, 5219681, 2493801, 2480542, 2435~\n$ acceptedScientificName        <chr> \"Diphasiastrum digitatum (Dill. ex A.Bra~\n$ kingdom                       <chr> \"Plantae\", \"Animalia\", \"Animalia\", \"Anim~\n$ phylum                        <chr> \"Tracheophyta\", \"Chordata\", \"Chordata\", ~\n$ order                         <chr> \"Lycopodiales\", \"Rodentia\", \"Passeriform~\n$ family                        <chr> \"Lycopodiaceae\", \"Sciuridae\", \"Troglodyt~\n$ genus                         <chr> \"Diphasiastrum\", \"Sciurus\", \"Thryothorus~\n$ species                       <chr> \"Diphasiastrum digitatum\", \"Sciurus caro~\n$ genericName                   <chr> \"Diphasiastrum\", \"Sciurus\", \"Thryothorus~\n$ specificEpithet               <chr> \"digitatum\", \"carolinensis\", \"ludovician~\n$ taxonRank                     <chr> \"SPECIES\", \"SPECIES\", \"SPECIES\", \"SPECIE~\n$ taxonomicStatus               <chr> \"ACCEPTED\", \"ACCEPTED\", \"ACCEPTED\", \"ACC~\n$ iucnRedListCategory           <chr> \"NE\", \"LC\", \"LC\", \"LC\", \"NE\", \"LC\", \"NE\"~\n$ dateIdentified                <chr> \"2022-01-02T17:26:35\", \"2022-01-01T18:27~\n$ coordinateUncertaintyInMeters <dbl> 10, 5, 65, 439, NA, 35, NA, 122, 28181, ~\n$ stateProvince                 <chr> \"Maryland\", \"Maryland\", \"Maryland\", \"Mar~\n$ year                          <int> 2022, 2022, 2022, 2022, 2022, 2022, 2022~\n$ month                         <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1~\n$ day                           <int> 2, 1, 1, 2, 2, 2, 2, 4, 3, 6, 4, 5, 7, 8~\n$ eventDate                     <chr> \"2022-01-02T11:26:46\", \"2022-01-01T13:27~\n$ modified                      <chr> \"2022-01-07T11:32:47.000+00:00\", \"2022-0~\n$ lastInterpreted               <chr> \"2022-12-09T20:34:02.663+00:00\", \"2022-1~\n$ references                    <chr> \"https://www.inaturalist.org/observation~\n$ license                       <chr> \"http://creativecommons.org/licenses/by-~\n$ identifiers                   <chr> \"none\", \"none\", \"none\", \"none\", \"none\", ~\n$ facts                         <chr> \"none\", \"none\", \"none\", \"none\", \"none\", ~\n$ relations                     <chr> \"none\", \"none\", \"none\", \"none\", \"none\", ~\n$ isInCluster                   <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE~\n$ datasetName                   <chr> \"iNaturalist research-grade observations~\n$ recordedBy                    <chr> \"Peter M Martin\", \"arborizations\", \"aspo~\n$ identifiedBy                  <chr> \"Peter M Martin\", \"arborizations\", \"Brid~\n$ geodeticDatum                 <chr> \"WGS84\", \"WGS84\", \"WGS84\", \"WGS84\", \"WGS~\n$ class                         <chr> \"Lycopodiopsida\", \"Mammalia\", \"Aves\", \"A~\n$ countryCode                   <chr> \"US\", \"US\", \"US\", \"US\", \"US\", \"US\", \"US\"~\n$ recordedByIDs                 <chr> \"none\", \"none\", \"none\", \"none\", \"none\", ~\n$ identifiedByIDs               <chr> \"none\", \"none\", \"none\", \"none\", \"none\", ~\n$ country                       <chr> \"United States of America\", \"United Stat~\n$ rightsHolder                  <chr> \"Peter M Martin\", \"arborizations\", \"aspo~\n$ identifier                    <chr> \"104193732\", \"104118861\", \"104123711\", \"~\n$ http...unknown.org.nick       <chr> \"petermmartin\", \"arborizations\", \"asponb~\n$ verbatimEventDate             <chr> \"Sun Jan 02 2022 11:26:46 GMT-0500 (EST)~\n$ collectionCode                <chr> \"Observations\", \"Observations\", \"Observa~\n$ gbifID                        <chr> \"3455477909\", \"3455493790\", \"3455493810\"~\n$ verbatimLocality              <chr> \"Prettyboy Reservoir Park, Parkton, MD, ~\n$ occurrenceID                  <chr> \"https://www.inaturalist.org/observation~\n$ taxonID                       <chr> \"122100\", \"46017\", \"7513\", \"5212\", \"1185~\n$ catalogNumber                 <chr> \"104193732\", \"104118861\", \"104123711\", \"~\n$ institutionCode               <chr> \"iNaturalist\", \"iNaturalist\", \"iNaturali~\n$ eventTime                     <chr> \"11:26:46-05:00\", \"13:27:26-05:00\", \"14:~\n$ occurrenceRemarks             <chr> \"not shown shallow runners\", NA, NA, NA,~\n$ http...unknown.org.captive    <chr> \"wild\", \"wild\", \"wild\", \"wild\", \"wild\", ~\n$ identificationID              <chr> \"229285610\", \"229095322\", \"229117924\", \"~\n$ name                          <chr> \"Diphasiastrum digitatum (Dill. ex A.Bra~\n$ informationWithheld           <chr> NA, NA, NA, NA, NA, NA, NA, NA, \"Coordin~\n$ lifeStage                     <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, ~\n$ reproductiveCondition         <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, ~\n$ infraspecificEpithet          <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, ~\n$ recordedByIDs.type            <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, ~\n$ recordedByIDs.value           <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, ~\n$ identifiedByIDs.type          <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, ~\n$ identifiedByIDs.value         <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, ~\n$ gadm                          <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, ~\n$ sex                           <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, ~\n$ identificationRemarks         <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, ~\n\ncolnames(GBIF_MD_research_grade)\n\n [1] \"key\"                           \"scientificName\"               \n [3] \"decimalLatitude\"               \"decimalLongitude\"             \n [5] \"issues\"                        \"datasetKey\"                   \n [7] \"publishingOrgKey\"              \"installationKey\"              \n [9] \"publishingCountry\"             \"protocol\"                     \n[11] \"lastCrawled\"                   \"lastParsed\"                   \n[13] \"crawlId\"                       \"hostingOrganizationKey\"       \n[15] \"basisOfRecord\"                 \"occurrenceStatus\"             \n[17] \"taxonKey\"                      \"kingdomKey\"                   \n[19] \"phylumKey\"                     \"classKey\"                     \n[21] \"orderKey\"                      \"familyKey\"                    \n[23] \"genusKey\"                      \"speciesKey\"                   \n[25] \"acceptedTaxonKey\"              \"acceptedScientificName\"       \n[27] \"kingdom\"                       \"phylum\"                       \n[29] \"order\"                         \"family\"                       \n[31] \"genus\"                         \"species\"                      \n[33] \"genericName\"                   \"specificEpithet\"              \n[35] \"taxonRank\"                     \"taxonomicStatus\"              \n[37] \"iucnRedListCategory\"           \"dateIdentified\"               \n[39] \"coordinateUncertaintyInMeters\" \"stateProvince\"                \n[41] \"year\"                          \"month\"                        \n[43] \"day\"                           \"eventDate\"                    \n[45] \"modified\"                      \"lastInterpreted\"              \n[47] \"references\"                    \"license\"                      \n[49] \"identifiers\"                   \"facts\"                        \n[51] \"relations\"                     \"isInCluster\"                  \n[53] \"datasetName\"                   \"recordedBy\"                   \n[55] \"identifiedBy\"                  \"geodeticDatum\"                \n[57] \"class\"                         \"countryCode\"                  \n[59] \"recordedByIDs\"                 \"identifiedByIDs\"              \n[61] \"country\"                       \"rightsHolder\"                 \n[63] \"identifier\"                    \"http...unknown.org.nick\"      \n[65] \"verbatimEventDate\"             \"collectionCode\"               \n[67] \"gbifID\"                        \"verbatimLocality\"             \n[69] \"occurrenceID\"                  \"taxonID\"                      \n[71] \"catalogNumber\"                 \"institutionCode\"              \n[73] \"eventTime\"                     \"occurrenceRemarks\"            \n[75] \"http...unknown.org.captive\"    \"identificationID\"             \n[77] \"name\"                          \"informationWithheld\"          \n[79] \"lifeStage\"                     \"reproductiveCondition\"        \n[81] \"infraspecificEpithet\"          \"recordedByIDs.type\"           \n[83] \"recordedByIDs.value\"           \"identifiedByIDs.type\"         \n[85] \"identifiedByIDs.value\"         \"gadm\"                         \n[87] \"sex\"                           \"identificationRemarks\"        \n\n# Filter data to find all distinct species\nMD_species <- GBIF_MD_research_grade %>% count(scientificName)\n# iNaturalist research-grade data has 210 unique species reported in Maryland\nMD_classcount <- GBIF_MD_research_grade %>% count(class)\n# 24 unique biological classes are reported in the data\n# Highest number of observations per class is reported in Aves (birds) at 286 observations.\nMD_unique_birds <- GBIF_MD_research_grade %>%\n  group_by(genus) %>%\n  filter(class == \"Aves\")\n\nMD_unique_birds_sf <- sf::st_as_sf(MD_unique_birds, coords = c(\"decimalLongitude\", \"decimalLatitude\"), crs = st_crs(4269))\n\n# Of the 286 bird observations, 84 unique species have been reported in this dataset.\n\nMD_unique_birds_bar <-\n  ggplot(\n    MD_unique_birds_sf,\n    aes(x = year, y = species)\n  ) +\n  geom_col()\n\nMD_unique_birds_bar\n\n\n\n# TODO: Consider using knitr::kable() or gt::gt() to create tables based on these counts - see the example below\n\n# FIXME: Did you intend to add a count() function before arrange()? This is currently returning an error.\n# MD_unique_birds %>%\n#   arrange(desc(n)) %>%\n#   knitr::kable()\n\n\n\n\nNow that we have learned a bit about the extent of iNaturalist data that has been reported to be research-grade, we can start to explore how publicly obtained observations in the state of Maryland compare to more strategic methods of collecting biological data.\nData obtained through the means of ecological surveys are conducted for two basic reasons–to determine the biological health of a habitat and to inform better decision-making for action plans."
  },
  {
    "objectID": "project-feedback.html",
    "href": "project-feedback.html",
    "title": "Project Proposal Feedback",
    "section": "",
    "text": "Your project is off to a great start! Your initial exploration is exactly what I was hoping for with this proposal - just take it a bit farther by converting the observation data into a sf object and starting to make a few more maps and data visualizations."
  },
  {
    "objectID": "project-feedback.html#changes-i-made",
    "href": "project-feedback.html#changes-i-made",
    "title": "Project Proposal Feedback",
    "section": "Changes I made",
    "text": "Changes I made\n\nI set up a data folder and added calls to readr::write_rds() to save your downloaded iNaturalist data locally and then readr::read_rds() to read it back again When you’re working with an API, it is good practice to save data locally if you haven’t changed your query so I also added the eval: false tag to the chunk where you’re downloading the data so it won’t run when you render the document.\nI spotted one chunk where you were using dplyr::mutate() when you clearly intended to use dplyr::select(). I corrected the code but I also encourage you to review the data transformation chapter from Wickham and Grolemund for more examples of how to filter and modify the observation attribute data."
  },
  {
    "objectID": "project-feedback.html#changes-you-should-make",
    "href": "project-feedback.html#changes-you-should-make",
    "title": "Project Proposal Feedback",
    "section": "Changes you should make",
    "text": "Changes you should make\n\nConvert your data frame of observations with coordinates into an sf object using the sf::st_as_sf() function passing the name of the coordinate columns to the coords parameter. Load another sf object from a file or using a spatial data access function like tigris::counties(). Then try using the sf::st_filter() function to filter your data frame of observations by the second sf object. You may need to use sf::st_transform() to make sure both objects use the same coordinate reference system. Review the chapter on spatial data operations from Lovelace et al. for more background on st_filter() and ideas of other spatial operations you could try.\nIf you focus on one or two projects, look for more information about how the project is organized, who is promoting the effort and why, and who is participating in the collection of observation data. Instead of framing inconsistencies in the iNaturalist data as a risk for “skewed data analyses” or “extra data cleaning” think about how you can look for traces of the people who collected the data within those inconsistencies. You can also find more technical documentation for the iNaturalist data here."
  },
  {
    "objectID": "project-feedback.html#things-to-consider",
    "href": "project-feedback.html#things-to-consider",
    "title": "Project Proposal Feedback",
    "section": "Things to consider",
    "text": "Things to consider\n\nYou have a lot of data and your questions are still fairly broad. Focusing on data from just 1 or 2 projects or about one genus (or even one common species) could help simplify the process of building an analysis and visualization. I’m intrigued by the prospect of comparing the “research-grade data” from GBIF and the original reports from the iNaturalist API. Could you see what share of reports get tagged as research grade? Is there any interesting spatial distribution to the reports that don’t “make the grade”?\nFind and read resources and articles from researchers or analysts who are already working with iNaturalist data. This iNaturalist user journal is a good example of the type of resource I’m thinking of. It is always a good idea to learn from experienced data users when you’re starting a new project with an unfamiliar source."
  },
  {
    "objectID": "project-proposal.html",
    "href": "project-proposal.html",
    "title": "Exploring iNaturalist Data: Final Project Proposal",
    "section": "",
    "text": "Modern ecological research relies on both historical and current data in order to create informed conservation action plans. While there are many non-profit and government agencies worldwide whose jobs are to compile this research, the rapid changes in climate patterns make these matters increasingly pressing every day. One way to expedite the process of data analysis is to employ citizens who hold a strong interest in their local habitats to aid in data collection.\nCitizen science is a concept that was first coined in the mid 90s to describe community participatory research.1 This participation manifests in three ways: as subjects, collectors, and consultants. There are many tools for the public to utilize in order to participate in citizen science projects. There is even a US government website devoted to citizen science initiatives.2 iNaturalist is another citizen science platform that was created as a Master’s thesis project by students at UC Berkeley.3 iNaturalist allows amateur naturalists to share ecological observations with other enthusiasts and experts around the world, in order to confirm biological identities. Users can post single observations they are curious about, or join a project with a specific ecological survey goal. The data is all publicly sourced and can be accessed by anyone who creates a free account. iNaturalist data is also accessible through the GBIF (Global Biodiversity Information Facility), which is a free, open-source international network and data structure for biodiversity data funded by the world’s governments.4 Although all these data are free to access, the question remains–how useful are these data?\nResearchers interested in utilizing publicly sourced data may find after a basic exploratory analysis that datasets are missing information, exhibit biases, or hold little intellectual merit. Because iNaturalist is primarily used as a tool to create community around data, certain measures must be taken to filter out unreliable data. Upon initially exploring the iNaturalist data in R, I found that iNaturalist dataframes contain 75 columns, some of which are seemingly arbitrary, but clearly have some sort of data management purpose. I have yet to find documentation for the dataframe structure. In addition, because all data is user reported, the number of observations is variable depending on location, whereas government and academically sanctioned biodiversity inventories generally follow strict site survey guidelines. Inconsistent location data may cause skewed data analyses.\nDespite the probability that publicly collected data, like that from iNaturalist, may lead to extra data cleaning and more complicated data analyses, these data are the future of ecological fitness assessments. With global climate change threatening scientists’ ability to access global habitats, there is an increasing need to collaborate with researchers online. I propose an exploratory analysis of these publicly accessible data. The following goals should be met with the completion of this project:\n\nImprove skills in data retrieval, data manipulation in R, data visualization in R.\nCompare ease of data retrieval from open-source databases, including iNaturalist5, GBIF6, and iMap.\nBegin assessing the completeness, or accuracy, of data publicly-sourced data from iNaturalist. Find comparative measures based on biodiversity counts determined from each database’s datasets.\nDetermine best use of iNaturalist data for research purposes.\nDeliver project documentation, data visualization (possibly small multiples)\n\n\n\n1Woolley, J. P., McGowan, M. L., Teare, H. J., Coathup, V., Fishman, J. R., Settersten, R. A., Jr, Sterckx, S., Kaye, J., & Juengst, E. T. (2016). Citizen science or scientific citizenship? Disentangling the uses of public engagement rhetoric in national research initiatives. BMC medical ethics, 17(1), 33. https://doi.org/10.1186/s12910-016-0117-1\n2https://www.citizenscience.gov/#\n3https://www.inaturalist.org/pages/about\n4https://www.gbif.org/what-is-gbif\n5Vijay Barve and Edmund Hart (2022). rinat: Access ‘iNaturalist’ Data Through APIs. https://docs.ropensci.org/rinat/ (website). https://github.com/ropensci/rinat (devel).\n6Chamberlain S, Barve V, Mcglinn D, Oldoni D, Desmet P, Geffert L, Ram K (2022). _rgbif: Interface to the Global Biodiversity Information Facility API_. R package version 3.7.3.1, <URL: https://CRAN.Rproject.org/package=rgbif>.\nChamberlain S, Boettiger C (2017). “R Python, and Ruby clients for GBIF species occurrence data.” _PeerJPrePrints_. <URL:https://doi.org/10.7287/peerj.preprints.3304v1>."
  }
]